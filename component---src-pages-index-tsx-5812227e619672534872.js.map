{"version":3,"sources":["webpack:///./src/components/projects/simple.tsx","webpack:///./src/components/images/badge.tsx","webpack:///./src/enums/langs.ts","webpack:///./src/components/projects/projectLanguage.tsx","webpack:///./src/components/profiles/external.tsx","webpack:///./src/components/profiles/language.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/images/thumbnail.tsx","webpack:///./src/components/images/image.tsx","webpack:///./src/components/projects/detail.tsx","webpack:///./src/components/projects/overlay.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["overlayDispatcher","event","body","document","querySelector","overlays","target","getElementById","currentTarget","id","classList","add","ProjectCard","data","className","onClick","src","imgSrc","name","description","tag","tags","type","join","Badge","props","useStaticQuery","match","React","allFile","edges","find","node","relativePath","fluid","childImageSharp","viewBox","version","width","height","aria-hidden","fillRule","d","LanguageColor","LanguageBadge","style","backgroundColor","Icon","href","link","title","image","background","external_id","Small","color","Language","IndexPage","highlighted","allProjectsJson","nodes","languages","allLanguagesJson","group","externals","allLinksJson","groupedLanguages","labeledExternals","forEach","value","GitHub","map","to","StackShare","using","learned","learning","download","Thumbnail","Image","ProjectDetail","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","x1","y1","x2","y2","strokeWidth","contents","text","Overlay","remove","querySelectorAll","element","project","_objectWithoutPropertiesLoose","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf"],"mappings":"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","file":"component---src-pages-index-tsx-5812227e619672534872.js","sourcesContent":["import * as React from 'react';\n\nimport Badge from '../images/badge';\nimport LanguageBadge from './projectLanguage';\n\nimport './simple.css';\n\nconst overlayDispatcher = (event: React.MouseEvent) => {\n  const body = document.querySelector('body');\n  const overlays = document.querySelector('.project-overlay');\n  const target = document.getElementById(`overlay-${event.currentTarget.id}`);\n  body.classList.add('disabled');\n  overlays.classList.add('active');\n  target.classList.add('active');\n};\n\nconst ProjectCard = ({ data }) => {\n  return (\n    <div className=\"project-card\" id={data.id} onClick={overlayDispatcher}>\n      <div className=\"project-card-name\">\n        <Badge className=\"project-card-badge\" src={data.imgSrc} />\n        {data.name}\n      </div>\n      <div className=\"project-card-description\">{data.description}</div>\n      <div className=\"project-card-tags\">\n        <LanguageBadge tag={data.tags[0]} />\n        <span className=\"project-card-type\">{data.type.join(', ')}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","import * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Img from 'gatsby-image';\n\nconst Badge = ({ src, ...props }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { internal: { mediaType: { regex: \"images/\" } } }) {\n        edges {\n          node {\n            relativePath\n            childImageSharp {\n              fluid(maxWidth: 32) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const match = React.useMemo(\n    () => data.allFile.edges.find(({ node }) => src === node.relativePath),\n    [data, src]\n  );\n\n  if (match) return <Img fluid={match.node.childImageSharp.fluid} {...props} />;\n  else\n    return (\n      <svg\n        className=\"project-card-badge\"\n        viewBox=\"0 0 16 16\"\n        version=\"1.1\"\n        width=\"16\"\n        height=\"16\"\n        aria-hidden=\"true\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z\"\n        />\n      </svg>\n    );\n};\n\nexport default Badge;\n","enum LanguageColor {\n  Python = '#3572A5',\n  TypeScript = '#2B7489',\n  JavaScript = '#F1E05A',\n  'Unreal Engine' = 'black',\n  Unity = 'black',\n  HTML = '#e34c26',\n  'C++' = '#f34b7d',\n  'C#' = '#178600',\n  PHP = '#4F5D95',\n  Java = '#b07219',\n  'Node.js' = '#3C873A',\n  Django = '#092e20',\n  MySQL = '#00758F',\n  MariaDB = '#002d3b',\n  MongoDB = '#589636',\n  Qt = '#41CD52',\n  Electron = '#89deee',\n  Tensorflow = '#FFA800',\n  'Jupyter Notebook' = '#f8702c',\n  Docker = '#0db7ed',\n  GraphQL = '#e12b9a',\n  Steamworks = '#66c0f4',\n  Discord = '#7289DA',\n  'Google Maps API' = '#4285F4',\n  'Google Cloud Platform' = '#4285F4',\n  'AWS EC2' = '#FF9900',\n  'AWS S3' = '#FF9900',\n}\n\nexport default LanguageColor;\n","import * as React from 'react';\n\nimport LanguageColor from '../../enums/langs';\n\nimport './projectLanguage.css';\n\nconst LanguageBadge = ({ tag }) => {\n  return (\n    <span className=\"project-language\">\n      <span\n        className=\"project-language-badge\"\n        style={{\n          backgroundColor: LanguageColor[tag] || '#ccc',\n        }}\n      />\n      {tag}\n    </span>\n  );\n};\n\nexport default LanguageBadge;\n","import * as React from 'react';\nimport Badge from '../images/badge';\nimport Thumbnail from '../images/thumbnail';\n\nimport './badge.css';\nimport './external.css';\n\nconst Icon = ({ data }) => {\n  return (\n    <a\n      className=\"badge-external noLint\"\n      href={data.link}\n      title={data.type}\n      target=\"_blank\"\n    >\n      <span\n        className=\"badge badge-external-icon\"\n        style={{\n          backgroundColor: data.image.background || '#FFFFFF',\n        }}\n      >\n        <Thumbnail\n          className=\"badge-image badge-external-icon-image\"\n          src={data.image.src}\n        />\n      </span>\n      <span className=\"badge-external-text\">\n        <h6>\n          <span className=\"lint\">{data.type}</span>\n        </h6>\n        <span className=\"lint\">{data.external_id}</span>\n      </span>\n    </a>\n  );\n};\n\nconst Small = ({ data }) => (\n  <a\n    className=\"badge badge-external-small noLintAbsolute\"\n    style={{\n      backgroundColor: data.image.background || '#FFFFFF',\n    }}\n    href={data.link}\n    title={data.type}\n    target=\"_blank\"\n  >\n    <Badge className=\"badge-external-small-image\" src={data.image.src} />\n    <span\n      className=\"badge-external-small-id\"\n      style={{\n        color: data.image.background ? '#FFFFFF' : '#000000',\n      }}\n    >\n      {data.external_id}\n    </span>\n  </a>\n);\n\nexport { Small, Icon };\n","import * as React from 'react';\nimport Thumbnail from '../images/thumbnail';\n\nimport './language.css';\n\nconst Language = ({ data }) => {\n  return (\n    <div\n      className=\"badge badge-lang\"\n      style={{\n        backgroundColor: data.image.background || '#FFFFFF',\n      }}\n      title={data.name}\n    >\n      <Thumbnail\n        className=\"badge-image badge-lang-image\"\n        src={data.image.src}\n      />\n    </div>\n  );\n};\n\nexport default Language;\n","import * as React from 'react';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Language from '../components/profiles/language';\nimport * as External from '../components/profiles/external';\nimport Project from '../components/projects/simple';\nimport Overlay from '../components/projects/overlay';\n\nimport './index.css';\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query getIndexData {\n      allProjectsJson(\n        sort: { fields: [isHighlighted, orderLevel, name], order: [DESC, ASC] }\n        filter: { isHighlighted: { eq: true } }\n        limit: 4\n      ) {\n        nodes {\n          id\n          name\n          description\n          startedAt\n          finishedAt\n          status\n          type\n          tags\n          links\n          imgSrc\n          contents {\n            title\n            text\n          }\n        }\n      }\n      allLanguagesJson {\n        group(field: level) {\n          nodes {\n            level\n            id\n            name\n            image {\n              background\n              src\n            }\n          }\n          fieldValue\n        }\n      }\n      allLinksJson {\n        nodes {\n          id\n          type\n          external_id\n          link\n          image {\n            background\n            src\n          }\n        }\n      }\n    }\n  `);\n\n  const highlighted = data.allProjectsJson.nodes;\n  const languages = data.allLanguagesJson.group;\n  const externals = data.allLinksJson.nodes;\n\n  const groupedLanguages: any = {};\n  const labeledExternals: any = {};\n\n  languages.forEach((value) => {\n    groupedLanguages[value['fieldValue']] = value.nodes;\n  });\n\n  externals.forEach((value) => {\n    labeledExternals[value['type']] = value;\n  });\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <section\n        className=\"title\"\n        id=\"title\"\n        style={{ width: '100%', height: '100vh' }}\n      >\n        <div>\n          <h1>\n            <span>Learn, Find, Figure Out</span>\n          </h1>\n          <p className=\"title-name\">STARTERGATE / 최호승</p>\n          <p>백엔드 엔지니어</p>\n          <p>게임 개발자</p>\n          <p>\n            3학년 고등학생 @{' '}\n            <a href=\"https://gsm.gen.hs.kr\" target=\"_blank\">\n              광주소프트웨어마이스터고등학교\n            </a>\n          </p>\n        </div>\n      </section>\n      <section id=\"backend-dev\">\n        <h2>Backend Engineer</h2>\n        <div className=\"section-main\">\n          <p className=\"section-punchline\">\n            백엔드 엔지니어입니다. 눈에 보이지 않는 걸 만듭니다.\n          </p>\n          <br />\n          서버에서 돌아가는 프로그램을 만듭니다. 직접 해야할 때는 모바일 앱이나\n          웹 앱도 직접 만듭니다.\n          <br />\n          컴퓨터에는 항상 관심이 많았습니다. 초등학교 때에는 컴퓨터 방과후를\n          다녔고, 중학교 때에{' '}\n          <a href=\"https://opentutorials.org/course/1\" target=\"_blank\">\n            생활코딩\n          </a>\n          으로 코딩을 시작했습니다.\n          <br />\n          코딩에 관심이 많아져서 고등학교는 소프트웨어마이스터고로 진학했습니다.\n          <br />\n          항상 변화하며 새로운 것을 시도합니다. 새로운 것은 항상 더 나은 것이라\n          생각합니다.\n        </div>\n        <div className=\"cv-item\">\n          <h5>\n            <a\n              href=\"http://gsm.gen.hs.kr/sub/page.php?page_code=info_06#department01\"\n              className=\"cv-item-title\"\n              title=\"광주소프트웨어마이스터고등학교 소프트웨어개발과\"\n              target=\"_blank\"\n            >\n              <span className=\"lint\">\n                광주소프트웨어마이스터고등학교 소프트웨어개발과\n              </span>\n            </a>\n          </h5>\n          <span>HTTP, TCP 같은 웹 이론 및 HTML & CSS 학습</span>\n          <br />\n          <span>과목 산출물 프로젝트 진행</span>\n          <br />\n          <span>웹 개발 동아리 빈실 부장</span>\n        </div>\n        <div className=\"cv-item\">\n          <h5>Node.js</h5>\n          <span>Node.js 8부터 시작</span>\n          <br />\n          <span>TypeScript와 함께 가장 많이 사용중</span>\n          <br />\n          <span>Express와 Koa 사용 중</span>\n        </div>\n        <div className=\"cv-item\">\n          <h5>Python</h5>\n          <span>Django와 챗봇 개발을 위해 사용</span>\n          <br />\n          <span>알고리즘 문제 해결을 위해 사용</span>\n          <br />\n          <span>파이썬 백엔드 개발 현장실습 경험, 배포된 코드 작성 경험</span>\n        </div>\n        <div className=\"cv-item\">\n          <h5>빈실</h5>\n          <span>학교 내부에서 사용되는 서비스를 개발하는 동아리</span>\n          <br />\n          <span>TypeScript, Node.js, Koa.js 사용</span>\n          <br />\n          <span>테스팅, 문서화, 스프린트 개발 경험</span>\n        </div>\n      </section>\n      <section id=\"game-dev\">\n        <h2>Game Developer</h2>\n        <div className=\"section-main\">\n          <p className=\"section-punchline\">\n            인디 게임 개발자입니다. 경험을 만듭니다.\n          </p>\n          <br />\n          다양한 장르의 게임을 만듭니다. 플랫포머 게임을 출시해봤고, 여러\n          프로젝트를 준비하고 있습니다.\n          <br />\n          대부분의 10대 남학생이 그렇듯, 게임을 좋아합니다. 초등학생 때는 넥슨\n          게임을 해왔고, 중학교 이후로는 패키지 게임에 빠졌습니다.\n          <br />\n          여러 게임을 해보다 보니 직접 만들어보고 싶다는 생각이 들었습니다.\n          그래서 고등학교 1학년에 유니티 방과후를 들었습니다.\n          <br />\n          방과후에서 배운 지식을 바탕으로 고2 때에 Tiny Beluga라는 동아리를\n          만들고, 친구들과 함께 Lost라는 게임을 개발하고 출시했습니다.\n          <br />\n          여러 장르를 시도합니다. 처음으로 출시해본 게임은 2D 플랫포머였고, 좋은\n          아이디어만 있다면 다양하게 만들어보고 있습니다.\n        </div>\n        <div className=\"cv-item\">\n          <h5>Unity</h5>\n          <span>게임 개발 동아리 Tiny Beluga에서 사용 중</span>\n          <br />\n          <span>개발한 게임 Steam 출시 경험</span>\n          <br />\n          <span>Unity Teams 활용한 협업 경험</span>\n        </div>\n        <div className=\"cv-item\">\n          <h5>Unreal Engine</h5>\n          <span>게임 프로토타입 개발에 사용 중</span>\n          <br />\n          <span>언리얼 엔진과 서버를 연결하여 통계 내주는 서비스 개발</span>\n          <br />\n          <span>열심히 공부 중...</span>\n        </div>\n        <div className=\"cv-item\">\n          <h5>Tiny Beluga</h5>\n          <span>인디 게임 개발 동아리</span>\n          <br />\n          <span>Unity 사용한 2D 플랫포머 게임 개발 / 출시 경험</span>\n          <br />\n          <span>차기작 얼심히 구상중...</span>\n        </div>\n      </section>\n      <section id=\"project\">\n        <div className=\"page-title\">\n          <h2>Project Highlights</h2>\n          <External.Small data={labeledExternals.GitHub} />\n        </div>\n        <div className=\"list\">\n          {highlighted.map((value) => (\n            <Project data={value} />\n          ))}\n        </div>\n        <Link to=\"/projects/\">See More...</Link>\n      </section>\n      <section id=\"cv-technologies\">\n        <div className={'page-title'}>\n          <h2>Technologies</h2>\n          <External.Small data={labeledExternals.StackShare} />\n        </div>\n        <div id=\"cv-languages-using\">\n          <h4>Using</h4>\n          <div className=\"list\">\n            {groupedLanguages.using?.map((value) => (\n              <Language data={value} />\n            ))}\n          </div>\n        </div>\n        <div id=\"cv-languages-learned\">\n          <h4>Learned / Used</h4>\n          <div className=\"list\">\n            {groupedLanguages.learned?.map((value) => (\n              <Language data={value} />\n            ))}\n          </div>\n        </div>\n        <div id=\"cv-languages-learning\">\n          <h4>Learning / Interested</h4>\n          <div className=\"list\">\n            {groupedLanguages.learning?.map((value) => (\n              <Language data={value} />\n            ))}\n          </div>\n        </div>\n      </section>\n      <section id=\"cv\">\n        <h2>Résumé</h2>\n        <section id=\"cv-education\">\n          <h3>Education</h3>\n          <div className=\"cv-item\">\n            <h5>\n              <a\n                href=\"https://gsm.gen.hs.kr\"\n                className=\"cv-item-title\"\n                title=\"광주소프트웨어마이스터고등학교\"\n              >\n                <span className=\"lint\">광주소프트웨어마이스터고등학교</span>\n              </a>\n            </h5>\n            <span>광주광역시</span>\n            <span>2018.03 ~ 2021.01</span>\n            <br />\n            <span>소프트웨어개발과</span>\n          </div>\n        </section>\n        <section id=\"cv-experiences\">\n          <h3>Experiences</h3>\n          <div className=\"cv-item\">\n            <h5>\n              <a\n                href=\"https://www.peoplefund.co.kr\"\n                className=\"cv-item-title\"\n                title=\"피플펀드컴퍼니\"\n                target=\"_blank\"\n              >\n                <span className=\"lint\">피플펀드컴퍼니</span>\n              </a>\n            </h5>\n            <span>서울특별시</span>\n            <span>2020.01 ~ 2020.02</span>\n            <br />\n            <span>백엔드 엔지니어 (현장실습)</span>\n            <br />\n            <span>계정 인증 미들웨어 및 일부 기능 리팩토링</span>\n          </div>\n        </section>\n        <section id=\"cv-activities\">\n          <div className=\"page-title\">\n            <h3>Activities</h3>\n            <External.Small\n              data={{\n                type: 'GitHub',\n                link: 'https://github.com/startergate/Conferences',\n                external_id: 'Conferences',\n                image: {\n                  src: 'externals/github.png',\n                  background: '#24292e',\n                },\n              }}\n            />\n          </div>\n          <div className=\"cv-item\">\n            <h5>글로벌 비즈쿨 CO-TDM 창업경진대회</h5>\n            <span>2018.6</span>\n            <span>최우수상</span>\n            <br />\n            <span>E-Faucet: 스마트 수도꼭지</span>\n          </div>\n          <div className=\"cv-item\">\n            <h5>GSM 창의알고리즘 콘테스트</h5>\n            <span>2018.4</span>\n            <span>장려상</span>\n            <br />\n            <span>M2C: Modular Multi Camera</span>\n          </div>\n          <div className=\"cv-item\">\n            <h5>GSM 팀프로젝트발표회</h5>\n            <span>2020.9</span>\n            <span>장려상</span>\n            <br />\n            <span>Eliverd</span>\n          </div>\n          <div className=\"cv-item\">\n            <h5>정보처리기능사</h5>\n            <span>2019.3</span>\n            <span>한국산업인력공단</span>\n          </div>\n          <div className=\"cv-item\">\n            <h5>TOEIC</h5>\n            <span>2018.8</span>\n            <span>865점</span>\n          </div>\n        </section>\n        <section id=\"cv-group-activities\">\n          <h3>Group Activities</h3>\n          <div className=\"cv-item\">\n            <h5>\n              <a\n                href=\"https://github.com/BeanSil\"\n                className=\"cv-item-title\"\n                title=\"빈실\"\n              >\n                <span className=\"lint\">빈실</span>\n              </a>\n            </h5>\n            <span>광주소프트웨어마이스터고등학교</span>\n            <span>웹 개발 동아리</span>\n            <br />\n            <span>동아리원</span>\n            <span>2018.3 ~ 2020.8</span>\n            <br />\n            <span>부장</span>\n            <span>2020.1 ~ 2020.8</span>\n            <br />\n            <span>프로젝트: DOTORI</span>\n          </div>\n          <div className=\"cv-item\">\n            <h5>\n              <a\n                href=\"https://github.com/tiny-beluga\"\n                className=\"cv-item-title\"\n                title=\"Tiny Beluga\"\n              >\n                <span className=\"lint\">Tiny Beluga</span>\n              </a>\n            </h5>\n            <span>광주소프트웨어마이스터고등학교</span>\n            <span>게임 개발 동아리</span>\n            <br />\n            <span>동아리원</span>\n            <span>2019.3 ~ </span>\n            <br />\n            <span>부장</span>\n            <span>2019.3 ~ </span>\n            <br />\n            <span>프로젝트: Lost</span>\n          </div>\n        </section>\n        <a href=\"/cv.pdf\" download>\n          Download CV as PDF\n        </a>\n      </section>\n      <section id=\"link\">\n        <h2>Links</h2>\n        <div className=\"list\">\n          {externals.map((value) => {\n            return <External.Icon data={value} />;\n          })}\n        </div>\n      </section>\n      <Overlay data={highlighted} />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","import * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Img from 'gatsby-image';\n\nconst Thumbnail = ({ src, ...props }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { internal: { mediaType: { regex: \"images/\" } } }) {\n        edges {\n          node {\n            relativePath\n            childImageSharp {\n              fluid(maxWidth: 128) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const match = React.useMemo(\n    () => data.allFile.edges.find(({ node }) => src === node.relativePath),\n    [data, src]\n  );\n\n  return <Img fluid={match.node.childImageSharp.fluid} {...props} />;\n};\n\nexport default Thumbnail;\n","import * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Img from 'gatsby-image';\n\nconst Image = ({ src, ...props }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { internal: { mediaType: { regex: \"images/\" } } }) {\n        edges {\n          node {\n            relativePath\n            childImageSharp {\n              fluid(maxWidth: 512) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const match = React.useMemo(\n    () => data.allFile.edges.find(({ node }) => src === node.relativePath),\n    [data, src]\n  );\n\n  return match ? (\n    <Img fluid={match.node.childImageSharp.fluid} {...props} />\n  ) : null;\n};\n\nexport default Image;\n","import * as React from 'react';\n\nimport Image from '../images/image';\nimport LanguageBadge from './projectLanguage';\n\nimport './overlay.css';\nimport './detail.css';\n\nconst ProjectDetail = ({ data }) => (\n  <div className=\"overlay-item project-detail\" id={'overlay-' + data.id}>\n    <div className=\"project-detail-title\">\n      <Image className=\"project-detail-icon\" src={data.imgSrc} />\n      <h2 className=\"project-detail-name\">{data.name}</h2>\n      <div className=\"project-card-description\">{data.description}</div>\n      <div className=\"project-card-tags\">\n        {data.tags.map((value) => (\n          <LanguageBadge tag={value} />\n        ))}\n      </div>\n      <span\n        className={'project-detail-exit'}\n        onClick={() => {\n          const overlay = document.querySelector('.project-overlay');\n          overlay.dispatchEvent(\n            new MouseEvent('click', {\n              view: window,\n              bubbles: true,\n              cancelable: true,\n            })\n          );\n        }}\n      >\n        <svg viewBox=\"0 0 12 12\" version=\"1.1\">\n          <line x1=\"1\" y1=\"11\" x2=\"11\" y2=\"1\" strokeWidth=\"1\" />\n          <line x1=\"1\" y1=\"1\" x2=\"11\" y2=\"11\" strokeWidth=\"1\" />\n        </svg>\n      </span>\n    </div>\n    {data.contents ? (\n      <div className=\"project-detail-content\">\n        {data.contents?.map(({ title, text }) => (\n          <div className=\"project-detail-content-item\">\n            <h5>{title}</h5>\n            {text}\n          </div>\n        ))}\n      </div>\n    ) : null}\n  </div>\n);\n\nexport default ProjectDetail;\n","import * as React from 'react';\nimport ProjectDetail from './detail';\n\nimport './overlay.css';\n\nconst Overlay = ({ data }) => {\n  /* document.addEventListener('keydown', (event) => {\n    if (event.keyCode == 27 || event.which == 27) {\n      const overlay = document.querySelector('.project-overlay');\n      overlay.dispatchEvent(new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true\n      }))\n    }\n  });*/\n\n  return (\n    <div\n      className=\"project-overlay\"\n      onClick={(event) => {\n        if (event.target !== event.currentTarget) return;\n        event.currentTarget.classList.remove('active');\n        document.querySelector('body').classList.remove('disabled');\n        document.querySelectorAll('.overlay-item').forEach((element) => {\n          element.classList.remove('active');\n        });\n      }}\n    >\n      {data.map((project) => (\n        <ProjectDetail data={project} />\n      ))}\n    </div>\n  );\n};\n\nexport default Overlay;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}